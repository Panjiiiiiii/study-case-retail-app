// Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String
  role         Role          @default(CASHIER) // ADMIN or CASHIER
  transactions Transaction[]
}

enum Role {
  ADMIN
  CASHIER
}

model Product {
  id           String            @id @default(uuid())
  name         String
  price        Float
  stock        Int
  imageUrl     String? // URL ke Cloudinary/Drive
  categoryId   String?
  unitId       String?
  category     Category?         @relation(fields: [categoryId], references: [id])
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  transactions TransactionItem[]
  Inventory    Inventory[]
  unit         Unit?             @relation(fields: [unitId], references: [id])
}

model Inventory {
  id             String   @id @default(uuid())
  productId      String
  wholeSalePrice Float
  quantity       Int
  Product        Product? @relation(fields: [productId], references: [id])
  createdAt      DateTime @default(now())
}

model Unit {
  id        String    @id @default(uuid())
  productId String
  unit_type String
  Product   Product[]
}

model Category {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Transaction {
  id            String            @id @default(uuid())
  userId        String
  total         Float
  status        TransactionStatus @default(PENDING)
  paymentMethod PaymentMethod // CASH/TRANSFER/MIDTRANS/XENDIT
  createdAt     DateTime          @default(now())
  user          User              @relation(fields: [userId], references: [id])
  items         TransactionItem[]
}

model TransactionItem {
  id            String      @id @default(uuid())
  transactionId String
  productId     String
  quantity      Int
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  product       Product     @relation(fields: [productId], references: [id])
}

enum TransactionStatus {
  PENDING
  SUCCESS
  FAILED
  CANCELLED
  EXPIRED
}

enum PaymentStatus {
  PAID
  UNPAID
}

enum PaymentMethod {
  CASH
  TRANSFER
  QRIS // Gopay/OVO/DANA
}
